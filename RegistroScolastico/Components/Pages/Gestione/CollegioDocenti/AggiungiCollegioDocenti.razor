@page "/collegidocente/crea"
@using Microsoft.EntityFrameworkCore
@using RegistroScolastico.Models
@using RegistroScolastico.Data
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Aggiungi Collegio Docenti</PageTitle>

<div class="container mt-4">

    <h2 class="mb-4 text-primary">Aggiungi Collegio Docente</h2>

    <EditForm Model="@CollegioDocente" OnValidSubmit="HandleValidSubmit">

        <DataAnnotationsValidator />

        <ValidationSummary />

        <div class="card shadow-sm p-4">

            <div class="mb-3">
                <label for="nome" class="form-label">Nome</label>
                <InputText id="nome" class="form-control" @bind-Value="CollegioDocente.Nome" />
                <ValidationMessage For="@(() => CollegioDocente.Nome)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Docenti da aggiungere</label>
                <div class="border rounded p-2" style="max-height: 250px; overflow-y: auto;">
                    @if (DocentiDisponibili.Count == 0)
                    {
                        <div class="text-muted">Nessun docente disponibile.</div>
                    }
                    else
                    {
                        @foreach (var docente in DocentiDisponibili)
                        {
                            if (docente?.Utente?.Profilo == null)
                            {
                                <div class="text-danger">Errore: docente o dati utente non validi.</div>
                                continue;
                            }
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="docente_@docente.UtenteId"
                                       value="@docente.UtenteId"
                                       @onchange="e => OnDocenteCheckedChanged(e, docente.UtenteId)"
                                       checked="@DocentiSelezionati.Contains(docente.UtenteId)" />
                                <label class="form-check-label" for="docente_@docente.UtenteId">
                                    @docente.Utente.Profilo.Cognome @docente.Utente.Profilo.Nome
                                </label>
                            </div>
                        }
                    }
                </div>
            </div>

            <div class="d-flex justify-content-end mt-4">
                <button type="button" class="btn btn-secondary me-2" @onclick="GoBack">Annulla</button>
                <button type="submit" class="btn btn-primary">Salva</button>
            </div>
        </div>

    </EditForm>

</div>

@code {

    private CollegioDocenti CollegioDocente { get; set; } = new CollegioDocenti();
    private List<Docente> DocentiDisponibili { get; set; } = new();
    private List<int> DocentiSelezionati { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        DocentiDisponibili = await DbContext.Docenti
            .Include(d => d.Utente)
                .ThenInclude(u => u.Profilo)
            .OrderBy(d => d.Utente.Profilo.Cognome)
            .ThenBy(d => d.Utente.Profilo.Nome)
            .ToListAsync();
    }

    private void OnDocenteCheckedChanged(ChangeEventArgs e, int docenteId)
    {
        var isChecked = (bool?)e.Value == true;
        if (isChecked)
        {
            if (!DocentiSelezionati.Contains(docenteId))
                DocentiSelezionati.Add(docenteId);
        }
        else
        {
            DocentiSelezionati.Remove(docenteId);
        }
    }

    private async Task HandleValidSubmit()
    {
        CollegioDocente.Docenti = await DbContext.Docenti
            .Where(d => DocentiSelezionati.Contains(d.UtenteId))
            .ToListAsync();

        DbContext.CollegiDocenti.Add(CollegioDocente);
        await DbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/gestione");
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/gestione");
    }
}
