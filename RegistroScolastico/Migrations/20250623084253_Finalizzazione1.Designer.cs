// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistroScolastico.Data;

#nullable disable

namespace RegistroScolastico.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250623084253_Finalizzazione1")]
    partial class Finalizzazione1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DocenteCollegio", b =>
                {
                    b.Property<int>("CollegioDocentiId")
                        .HasColumnType("int");

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.HasKey("CollegioDocentiId", "DocenteId");

                    b.HasIndex("DocenteId");

                    b.ToTable("DocenteCollegio");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Anno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Anni");
                });

            modelBuilder.Entity("RegistroScolastico.Models.AnnoFormativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFine")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AnniFormativi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.CategoriaValutazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colore")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModifica")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Valore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CategoriaValutazione");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Classe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnnoFormativoId")
                        .HasColumnType("int");

                    b.Property<int>("AnnoId")
                        .HasColumnType("int");

                    b.Property<int?>("CollegioDocentiId")
                        .HasColumnType("int");

                    b.Property<int>("CorsoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<int>("SezioneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnnoFormativoId");

                    b.HasIndex("CollegioDocentiId");

                    b.HasIndex("CorsoId");

                    b.HasIndex("SezioneId");

                    b.HasIndex("AnnoId", "SezioneId", "AnnoFormativoId", "CorsoId")
                        .IsUnique();

                    b.ToTable("Classi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.CollegioDocenti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CollegiDocenti");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Corso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Corsi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Docente", b =>
                {
                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("UtenteId");

                    b.ToTable("Docenti");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaricatoreId")
                        .HasColumnType("int");

                    b.Property<int?>("ClasseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCaricamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("MateriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PercorsoFile")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoFile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CaricatoreId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Documenti");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFine")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Luogo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatoreId");

                    b.ToTable("Eventi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCreazione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DataModifica")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Materie");
                });

            modelBuilder.Entity("RegistroScolastico.Models.MateriaClasse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaValutazioneId")
                        .HasColumnType("int");

                    b.Property<int?>("ClasseId")
                        .HasColumnType("int");

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaValutazioneId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("DocenteId");

                    b.HasIndex("MateriaId");

                    b.ToTable("MaterieClassi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Messaggio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("DestinatarioId")
                        .HasColumnType("int");

                    b.Property<bool>("Letto")
                        .HasColumnType("bit");

                    b.Property<int>("MittenteId")
                        .HasColumnType("int");

                    b.Property<string>("Testo")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("DestinatarioId");

                    b.HasIndex("MittenteId");

                    b.ToTable("Messaggi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCreazione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DataModifica")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Moduli");
                });

            modelBuilder.Entity("RegistroScolastico.Models.ModuloMateria", b =>
                {
                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.HasKey("ModuloId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("ModuliMaterie");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Notifica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("Letta")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Testo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtenteId");

                    b.ToTable("Notifiche");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Presenza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRegistrazione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("Giustificata")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Presente")
                        .HasColumnType("bit");

                    b.Property<int>("StudenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudenteId");

                    b.ToTable("Presenze");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Profilo", b =>
                {
                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModifica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("InfoAggiuntive")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UtenteId");

                    b.HasIndex("CodiceFiscale")
                        .IsUnique();

                    b.ToTable("Profili");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Sezione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Sezioni");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Studente", b =>
                {
                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.Property<int>("ClasseId")
                        .HasColumnType("int");

                    b.HasKey("UtenteId");

                    b.HasIndex("ClasseId");

                    b.ToTable("Studenti");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCreazione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DataUltimoAccesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ruolo")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Valutazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaValutazioneId")
                        .HasColumnType("int");

                    b.Property<string>("Commento")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<int>("StudenteId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal?>("VotoNumerico")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaValutazioneId");

                    b.HasIndex("DocenteId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("StudenteId");

                    b.ToTable("Valutazioni");
                });

            modelBuilder.Entity("DocenteCollegio", b =>
                {
                    b.HasOne("RegistroScolastico.Models.CollegioDocenti", null)
                        .WithMany()
                        .HasForeignKey("CollegioDocentiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Docente", null)
                        .WithMany()
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RegistroScolastico.Models.Classe", b =>
                {
                    b.HasOne("RegistroScolastico.Models.AnnoFormativo", "AnnoFormativo")
                        .WithMany("Classi")
                        .HasForeignKey("AnnoFormativoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Anno", "Anno")
                        .WithMany()
                        .HasForeignKey("AnnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.CollegioDocenti", "CollegioDocenti")
                        .WithMany("Classi")
                        .HasForeignKey("CollegioDocentiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RegistroScolastico.Models.Corso", "Corso")
                        .WithMany("Classi")
                        .HasForeignKey("CorsoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Sezione", "Sezione")
                        .WithMany()
                        .HasForeignKey("SezioneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anno");

                    b.Navigation("AnnoFormativo");

                    b.Navigation("CollegioDocenti");

                    b.Navigation("Corso");

                    b.Navigation("Sezione");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Docente", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Utente", "Utente")
                        .WithMany()
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Documento", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Utente", "Caricatore")
                        .WithMany()
                        .HasForeignKey("CaricatoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RegistroScolastico.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Caricatore");

                    b.Navigation("Classe");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Evento", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Utente", "Creatore")
                        .WithMany()
                        .HasForeignKey("CreatoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creatore");
                });

            modelBuilder.Entity("RegistroScolastico.Models.MateriaClasse", b =>
                {
                    b.HasOne("RegistroScolastico.Models.CategoriaValutazione", "CategoriaValutazione")
                        .WithMany()
                        .HasForeignKey("CategoriaValutazioneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RegistroScolastico.Models.Classe", "Classe")
                        .WithMany("MaterieClassi")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RegistroScolastico.Models.Docente", "Docente")
                        .WithMany("MaterieInsegnate")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Materia", "Materia")
                        .WithMany("Classi")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaValutazione");

                    b.Navigation("Classe");

                    b.Navigation("Docente");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Messaggio", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Utente", "Destinatario")
                        .WithMany()
                        .HasForeignKey("DestinatarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Utente", "Mittente")
                        .WithMany()
                        .HasForeignKey("MittenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Destinatario");

                    b.Navigation("Mittente");
                });

            modelBuilder.Entity("RegistroScolastico.Models.ModuloMateria", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Materia", "Materia")
                        .WithMany("Moduli")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Modulo", "Modulo")
                        .WithMany("Materie")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Notifica", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Utente", "Utente")
                        .WithMany()
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Presenza", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Studente", "Studente")
                        .WithMany("Presenze")
                        .HasForeignKey("StudenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Studente");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Profilo", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Utente", "Utente")
                        .WithOne("Profilo")
                        .HasForeignKey("RegistroScolastico.Models.Profilo", "UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Studente", b =>
                {
                    b.HasOne("RegistroScolastico.Models.Classe", "Classe")
                        .WithMany("Studenti")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Utente", "Utente")
                        .WithMany()
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Valutazione", b =>
                {
                    b.HasOne("RegistroScolastico.Models.CategoriaValutazione", "CategoriaValutazione")
                        .WithMany()
                        .HasForeignKey("CategoriaValutazioneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RegistroScolastico.Models.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistroScolastico.Models.Studente", "Studente")
                        .WithMany("Valutazioni")
                        .HasForeignKey("StudenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaValutazione");

                    b.Navigation("Docente");

                    b.Navigation("Materia");

                    b.Navigation("Studente");
                });

            modelBuilder.Entity("RegistroScolastico.Models.AnnoFormativo", b =>
                {
                    b.Navigation("Classi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Classe", b =>
                {
                    b.Navigation("MaterieClassi");

                    b.Navigation("Studenti");
                });

            modelBuilder.Entity("RegistroScolastico.Models.CollegioDocenti", b =>
                {
                    b.Navigation("Classi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Corso", b =>
                {
                    b.Navigation("Classi");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Docente", b =>
                {
                    b.Navigation("MaterieInsegnate");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Materia", b =>
                {
                    b.Navigation("Classi");

                    b.Navigation("Moduli");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Modulo", b =>
                {
                    b.Navigation("Materie");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Studente", b =>
                {
                    b.Navigation("Presenze");

                    b.Navigation("Valutazioni");
                });

            modelBuilder.Entity("RegistroScolastico.Models.Utente", b =>
                {
                    b.Navigation("Profilo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
